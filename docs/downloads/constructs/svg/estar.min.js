/*!
 * VERSION: 0.0.1
 * DATE: 2017-05-16
 * UPDATES AND DOCS AT: https://chris-moody.github.io/mkr
 *
 * @license copyright 2017 Christopher C. Moody
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy of
 *  this software and associated documentation files (the "Software"), to deal in the
 *  Software without restriction, including without limitation the rights to use, copy,
 *  modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
 *  and to permit persons to whom the Software is furnished to do so, subject to the
 *  following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 *  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 *  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 *  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 * @author: Christopher C. Moody, chris@moodydigital.com
 */
!function(global,className){var _instances={},_count=-1,estar=function(options){options=options||{},_count++;var id=this._id=options.id||className+"-"+_count;this._parent=mkr.setDefault(options,"parent",mkr["default"](mkr.query("svg"),mkr.create("svg",{css:{overflow:"visible"}})));var p="string"==typeof this._parent?mkr.query(this._parent):this._parent;p instanceof SVGElement||(this._parent=mkr.create("svg",{css:{overflow:"visible"}},this._parent)),mkr.setDefault(options,"attr",{}),mkr.setDefault(options.attr,"id",id),mkr.setDefault(options,"css",{}),mkr.setDefault(options,"fill","transparent"),mkr.setDefault(options,"stroke","#000000"),mkr.setDefault(options,"strokeWidth",1),mkr.setDefault(options.attr,"fill",options.fill),mkr.setDefault(options.attr,"stroke",options.stroke),mkr.setDefault(options.attr,"stroke-width",options.strokeWidth),this._x=mkr["default"](options.x,0),this._y=mkr["default"](options.y,0),this._points=mkr["default"](options._points,5),this._r1x=mkr["default"](options.r1x,15),this._r1y=mkr["default"](options.r1y,25),this._r2x=mkr["default"](options.r2x,50),this._r2y=mkr["default"](options.r2y,75),this._poly=mkr.create("polygon",{attr:options.attr,css:options.css},this._parent),this.update(),_instances[id]=this};estar.prototype={get el(){return this._poly},get id(){return this.el.id},get parent(){return this.el.parentNode},get fill(){return this.el.getAttribute("fill")},set fill(value){this.el.setAttribute("fill",value)},get stroke(){return this.el.getAttribute("stroke")},set stroke(value){this.el.setAttribute("stroke",value)},get strokeWidth(){return this.el.getAttribute("stroke-width")},set strokeWidth(value){this.el.setAttribute("stroke-width",value)},get dasharray(){var style=window.getComputedStyle(this.el);return style.getPropertyValue("stroke-dasharray")},set dasharray(value){TweenMax.set(this.el,{css:{strokeDasharray:value}})},get dashoffset(){var style=window.getComputedStyle(this.el);return style.getPropertyValue("stroke-dashoffset")},set dashoffset(value){TweenMax.set(this.el,{css:{strokeDashoffset:value}})},get slice(){var offset,da,da0,da1;if(offset=mkr.unitless(String(this.dashoffset).trim()),da=this.dasharray.split(","),da0=mkr.unitless(String(da[0]).trim()),0===offset&&"none"===da0)return"0 100%";da1=mkr.unitless(String(da[1]).trim());var estart,end,len=this.el.getTotalLength();return 0>offset?(estart=-offset,end=da0+estart):(estart=0,end=Math.abs(da0-offset)),this._estartUnit&&(estart=100*mkr.fix(estart/len)+"%"),this._endUnit&&(end=100*mkr.fix(end/len)+"%"),estart+" "+end},set slice(value){var args=value.split(" ");if(0!=args.length){var estart,end;1==args.length?(estart=0,end=args[0]):(estart=args[0],end=args[1]);var len=this.el.getTotalLength();if("string"==typeof estart){var n=estart.indexOf("%");n>=0?(estart=mkr.fix(len*(mkr.unitless(estart)/100)),this._estartUnit=!0):this._estartUnit=!1}"string"==typeof end&&(n=end.indexOf("%"),n>=0?(end=mkr.fix(len*(mkr.unitless(end)/100)),this._endUnit=!0):this._endUnit=!1);var offset,da0,da1,p0,p1;p0=Math.min(estart,end),p1=Math.max(estart,end),0==p0?(da0=len+1,offset=p1>=len?0:da0-p1):(da0=Math.abs(p1-p0),offset=-p0),da1=len+11,TweenMax.set(this,{dashoffset:offset,dasharray:da0+"px,"+da1+"px"})}},get x(){return this._x},set x(value){this._x=value,this.update()},get y(){return this._y},set y(value){this._y=value,this.update()},get coords(){return this._coords},get r1x(){return this._r1x},set r1x(value){this._r1x=value,this.update()},get r1y(){return this._r1y},set r1y(value){this._r1y=value,this.update()},get r2x(){return this._r2x},set r2x(value){this._r2x=value,this.update()},get r2y(){return this._r2y},set r2y(value){this._r2y=value,this.update()},get points(){return this._points},set points(value){this._points=value,this.update()},getPoint:function(index){return index=mkr["default"](index,-1),0>index&&(index=this._coords.length+index),this._coords[index]},update:function(){this._coords=[];for(var rx,ry,newPts="",len=2*this._points,dR=mkr.RAD*(360/len),i=0;len>i;i++){rx=i%2==0?this.r1x:this.r2y,ry=i%2==0?this.r1x:this.r2y;var x=this._x+rx*Math.cos(dR*i),y=this._y+ry*Math.sin(dR*i);this._coords[i]=[x,y],newPts+=(i>0?", ":"")+x+" "+y}TweenMax.set(this._poly,{attr:{points:newPts}})}},estar.getInstance=function(id){return _instances[id]},estar.getElInstance=function(el){return _instances[el.id]},Object.defineProperty(estar,"VERSION",{get:function(){return"0.0.1"}}),"function"==typeof define&&define.amd?define(function(){return estar}):"undefined"!=typeof module&&module.exports?module.exports=estar:global[className]=estar}(mkr._constructs,"estar");